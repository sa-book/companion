# ******************************************************************************
# ******************************************************************************

# ===================================================
# Load and download (if necessary) required packages
# ===================================================

# use (and install if necessary) pacman package 
if (!require("pacman")) install.packages("pacman")
library(pacman)

# load and install (if necessary) required packages for this course
p_load(TraMineR, TraMineRextras, tidyverse, haven, 
       RColorBrewer, colorspace)

# ******************************************************************************

# import stata dataset using haven 
# assuming that data are in current working directory
family <- read_dta("12_PartnerBirthbio.dta")

# looking for the variable names of the sequence variables
names(family)

# ******************************************************************************

# extracting the sequence variables (which all start with state)
seqvars <- family %>%
  select(starts_with("state"))


# ******************************************************************************

# Defining the labels
shortlab <- c("S", "Sc", "LAT", "LATc", "COH", "COHc", 
              "MAR", "MARc1", "MARc2+")

longlab <-  names(attributes(seqvars$state1)$labels)


# ******************************************************************************

# Choosing colors with the pre-defined color palettes of colorspace

col1 <- sequential_hcl(5, palette = "Blues")[3:2]
col2 <- sequential_hcl(5, palette = "Greens")[2:1]
col3 <- sequential_hcl(5, palette = "Oranges")[3:2]
col4 <- sequential_hcl(5, palette = "magenta")[3:1]

colspace <- c(col1, col2, col3, col4)

swatchplot(colspace)

# ******************************************************************************


fam.seq <- seqdef(seqvars, 
                  states = shortlab, labels = longlab, alphabet = c(1:9),  
                  cpal = colspace,
                  weights = family$weight40,
                  id = family$id,
                  xtstep = 24)


fam.seq.year <- seqgranularity(fam.seq, 
                               tspan=12, 
                               method="mostfreq")

### First visual check

seqiplot(fam.seq, 
         border = NA, 
         with.legend = "FALSE", 
         xtlab = seq(18,42, by = 1/12))

seqiplot(fam.seq, 
         border = NA, 
         with.legend = "FALSE", 
         xtlab = seq(18,42, by = 1/12))

seqiplot(fam.seq.year, 
         border = NA, 
         with.legend = "FALSE", 
         xtlab = seq(18,40, by = 1))

seqiplot(fam.seq.year, 
         border = NA, 
         with.legend = "FALSE", 
         axes = F)
axis(1, at=(seq(0,22, by = 2)), labels = seq(18,40, by = 2))

par(pin=c(7,.8))
seqiplot(fam.seq.year[1,], 
         border = TRUE, 
         with.legend = FALSE, 
         axes = FALSE,
         yaxis = FALSE, ylab = NA)
axis(1, at=(seq(0.5,21.5, by = 1)), 
     labels = seq(18,39, by = 1), 
     cex.axis=0.8,
     line = .25)
text(0.5, .2, "ttt",cex=1,pos=3) 

dev.off()

colgrey <- c(rep("#FFFFFF",2), 
             rep("#636363",2), 
             rep("#BDBDBD",2), 
             rep("#F0F0F0",3))

colgrey <- c(rep("#FFFFFF",2), 
             rep("#F0F0F0",2), 
             rep("#BDBDBD",2), 
             rep("#737373",3))

colgrey <- c(rep("#FFFFFF",2), 
             rep(gray.colors(9)[8],2), 
             rep(gray.colors(9)[5],2), 
             rep(gray.colors(9)[2],3))


fam.seq <- seqdef(seqvars, 
                  states = shortlab, labels = longlab, alphabet = c(1:9),  
                  cpal = colgrey,
                  weights = family$weight40,
                  id = family$id,
                  xtstep = 24)


fam.seq.year <- seqgranularity(fam.seq, 
                               tspan=12, 
                               method="mostfreq")

fam.seq2 <- seqdef(seqvars, 
                  states = shortlab, labels = longlab, alphabet = c(1:9),  
                  weights = family$weight40,
                  id = family$id,
                  xtstep = 24,
                  cpal=rep("#000000",9))

fam.seq2.year <- seqgranularity(fam.seq2, 
                               tspan=12, 
                               method="mostfreq")


print(fam.seq.year[1:10,], format = "SPS")


par(mar=c(9, 4, 0, 2))
seqIplot(fam.seq.year, idxs=4:7, 
         border = TRUE, 
         with.legend = FALSE, 
         axes = FALSE,
         yaxis = FALSE, ylab = NA)
par(new=TRUE)
seqIplot(fam.seq2.year, idxs=4:7, 
         border = TRUE, 
         with.legend = FALSE, 
         axes = FALSE,
         yaxis = FALSE, ylab = NA,
         density=c(0,20,0,20,0,20,0,20,20), 
         angle=c(0,45,0,45,0,45,0,45,135))

legend_large_box("bottom", legend = longlab,
                 ncol=3, fill =colgrey,
                 box.cex=c(4,1.5),  y.intersp=2,
                 inset=c(0,-.35), xpd=TRUE)
par(new=TRUE)
legend_large_box("bottom", legend = longlab,
                 ncol=3, bg = "transparent",
                 box.cex=c(4,1.5),  y.intersp=2,
                 inset=c(0,-.35), xpd=TRUE,
                 density=c(0,20,0,20,0,20,0,20,20), 
                 angle=c(0,45,0,45,0,45,0,45,135))





# ******************************************************************************


png(file = "dplot_gray.png", 
    width = 800, height = 600, res = 100)

par(mar=c(9, 4, 1, 4), las = 1)
seqdplot(fam.seq.year, xlab = "Age", ylab = "Relative frequency",
         with.legend = "FALSE" , axes = FALSE)
par(new=TRUE)
seqdplot(fam.seq2.year, xlab = "Age", ylab = "Relative frequency",
         with.legend = "FALSE" , axes = FALSE,
         density=c(0,20,0,20,0,20,0,20,20), 
         angle=c(0,45,0,45,0,45,0,45,135))
axis(1, at=(seq(0,22, by = 2)), labels = seq(18,40, by = 2))

par(mar=c(0, 1, 0, 1))
legend_large_box("bottom", legend = longlab,
                 ncol=3, fill =colgrey,
                 box.cex=c(4.5,1.5),  y.intersp=2,
                 inset=c(0,-.35), xpd=TRUE)
par(new=TRUE)
legend_large_box("bottom", legend = longlab,
                 ncol=3, bg = "transparent",
                 box.cex=c(4.5,1.5),  y.intersp=2,
                 inset=c(0,-.35), xpd=TRUE,
                 density=c(0,20,0,20,0,20,0,20,20), 
                 angle=c(0,45,0,45,0,45,0,45,135))

dev.off()



png(file = "dplot_grayMonthly.png", 
    width = 800, height = 600, res = 100)

par(mar=c(9, 4, 1, 4), las = 1)
seqdplot(fam.seq, xlab = "Age", ylab = "Relative frequency",
         with.legend = "FALSE" , axes = FALSE, border = NA)
par(new=TRUE)
seqdplot(fam.seq2, xlab = "Age", ylab = "Relative frequency",
         with.legend = "FALSE" , axes = FALSE, , border = NA,
         density=c(0,20,0,20,0,20,0,20,20), 
         angle=c(0,45,0,45,0,45,0,45,0))
axis(1, at=(seq(0,264, by = 24)), labels = seq(18,40, by = 2))

par(mar=c(0, 1, 0, 1))
legend_large_box("bottom", legend = longlab,
                 ncol=3, fill =colgrey,
                 box.cex=c(4.5,1.5),  y.intersp=2,
                 inset=c(0,-.35), xpd=TRUE)
par(new=TRUE)
legend_large_box("bottom", legend = longlab,
                 ncol=3, bg = "transparent",
                 box.cex=c(4.5,1.5),  y.intersp=2,
                 inset=c(0,-.35), xpd=TRUE,
                 density=c(0,20,0,20,0,20,0,20,20), 
                 angle=c(0,45,0,45,0,45,0,45,0))

dev.off()
