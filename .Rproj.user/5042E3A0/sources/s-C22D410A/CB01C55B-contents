---
title: "Choosing colors"
output: html_notebook
---

The community of R developers provides you with plenty of tools for finding suitable colors for sequence visualization. We illustrate how to use `RColorBrewer` (which is also used by `TraMiner::seqdef`), `colorspace`, and `colortools` to choose colors. If you are using R Studio you also might want to consider the very helpful package `colourpicker`.

For a brief introduction to the "Selecting Colors for Statistical Graphics" we recommend the paper by [Zeileis et al. (2009)](https://dx.doi.org/10.1016/j.csda.2008.11.033). For a more detailed discussion of color palettes based on the HCL (Hue-Chroma-Luminance) color space using R we refer to [Zeileis et al. (2019)](https://arxiv.org/abs/1903.06490).


## Starting Point
For this excercise we want to find a suitable color palette for visualizing sequences with the following state space (alphabet):


```{r echo=FALSE}
kable(tibble(state = longlab, shortlabel = shortlab), 
      col.names = c("State", "Short Label"))
```

\  

## Defining the sequence color palette

The state space is a combination of partnership status and fertility. For each partnership state we assign a unique color.

- Single = Blue
- LAT = Green
- Cohabitation = Orange
- Marriage = Purple/Magenta

In order to indicate differences in fertility within partnership states we increase the chroma of the respective color.

\  

#### Choosing colors with the pre-defined color palettes of `RColorBrewer`

Typing `display.brewer.all()` provides you with an overview of the color palettes available in the `RColorBrewer` package.

```{r echo=FALSE}
include_graphics("brewerpal.png")
```

Knowing the names of the palettes we want to use (`"Blues", "Greens", "Oranges", "Purples"`) we can continue by choosing specific colors from these palettes. Usually this is an iterative process which involves inspecting multiple palettes.

For example, `RColorBrewer` gives us different sets of Blues when we inspect sequential palettes of different length. It is up to you to decide which colors fit your purposes best and to extract them for your sequence color palette

```{r}
display.brewer.pal(3, "Blues")
display.brewer.pal(7, "Blues")
```

```{r, echo=FALSE}
par(mar = c(4, 4, 0, 2) + 0.1)
display.brewer.pal(3, "Blues")

par(mar = c(4, 4, 3, 2) + 0.1)
display.brewer.pal(7, "Blues")
```

\  

We decided to extract the second and the third color of the sequential palette comprising three different kinds of blues. The remaining colors were choosen in a similar fashion 


```{r}
# extract color palettes for the different partnership-fertility combinations
col1 <- brewer.pal(3, "Blues")[2:3]
col2 <- brewer.pal(3, "Greens")[2:3]
col3 <- brewer.pal(3, "Oranges")[2:3]
col4 <- brewer.pal(7, "Purples")[5:7]

# define complete color palette
colspace1 <- c(col1, col2, col3, col4)
```

\
The resulting color palette can be inspected using the `swatchplot` function of the `colorspace`package.

```{r}
swatchplot(colspace1)
```

```{r, echo=FALSE}
par(mar = c(2, 4, 0, 2) + 0.1)
swatchplot(colspace1)
```




#### Choosing colors with the pre-defined color palettes of colorspace

Like in the previous step we start by plotting the color palettes available in the package:

```{r}
hcl_palettes(plot = TRUE)
```

```{r echo=FALSE}
include_graphics("hcl_palettes.png")
```

Again, we continue with inspecting the suitable palettes.

```{r}
swatchplot(sequential_hcl(5, palette = "Blues"))
```

```{r, echo=FALSE}
par(mar = c(0, 4, 0, 2) + 0.1)
swatchplot(colspace1)
```


Note that the resulting color vector starts with the darkest blue, whereas our intended color palette should start with a light blue. Accordingly, the colors must be extracted in rerverse order (as in the code below) or one could change the order of the vector by adding the option `rev = TRUE` when running `sequential_hcl`.

This is our final choice using the palettes provided by `colorspace´: 

```{r}
col1 <- sequential_hcl(5, palette = "Blues")[3:2]
col2 <- sequential_hcl(5, palette = "Greens")[2:1]
col3 <- sequential_hcl(5, palette = "Oranges")[3:2]
col4 <- sequential_hcl(5, palette = "magenta")[3:1]

colspace2 <- c(col1, col2, col3, col4)

swatchplot(colspace2)
```

```{r, echo=FALSE}
par(mar = c(2, 4, 0, 2) + 0.1)
swatchplot(colspace2)
```


#### Choosing colors with colortools

`colortools`is yet another nice package for choosing colors. Here we have either to know the R color names or the hexadecimal notation of a color we want to use as a starting point for displaying sequential color palettes. 

Here again the command for the blue color palette:


```{r}
sequential("royalblue", 20)
```

This is our final choice using the palettes provided by `colortools´: 

```{r}
col1 <- sequential("royalblue", 20, plot = FALSE)[3:4]
col2 <- sequential("green3", 20, plot = FALSE)[c(2,6)]
col3 <- sequential("darkorange", 20, plot = FALSE)[5:6]
col4 <- sequential("purple", 25, plot = FALSE)[3:5]

colspace3 <- c(col1, col2, col3, col4)

swatchplot(colspace3)
```

```{r, echo=FALSE}
par(mar = c(2, 4, 0, 2) + 0.1)
swatchplot(colspace3)
```

#### Comparison of the three color palettes

All different approaches produce satisfactory results: 

```{r}
swatchplot("RColorBrewer" = colspace1,
           "colorspace" = colspace2,
           "colortools" = colspace3)
```


For our final decision we compare the different palettes by inspecting the state distribution plots for our sequence data. We prefer the solution obtained by `colorspace` and will proceed with the respective color palette.


```{r echo=FALSE}
include_graphics("dplot_colorpals.png")
```


